apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
    creationTimestamp: "2025-07-14T05:48:46Z"
    generateName: apim-aga-587cffb769-
    generation: 1
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 587cffb769
    name: apim-aga-587cffb769-qs328
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apim-aga-587cffb769
      uid: ea871144-94a6-45bb-8e2c-c275cb1207c0
    resourceVersion: "72969998"
    uid: 8a7ce18d-bcc3-4810-ae2d-e5e4df6d0e49
  spec:
    containers:
    - env:
      - name: METRICS_DB_URL
        value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
      - name: METRICS_DB_USERNAME
        valueFrom:
          secretKeyRef:
            key: username
            name: apim-metrics-db
      - name: METRICS_DB_PASS
        valueFrom:
          secretKeyRef:
            key: password
            name: apim-metrics-db
      - name: ACCEPT_GENERAL_CONDITIONS
        value: "yes"
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-7-BN0006-ubi9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: liveness.apimgr
          path: /healthcheck
          port: 8040
          scheme: HTTPS
        initialDelaySeconds: 40
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: apigateway
      ports:
      - containerPort: 8040
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: readiness.apimgr
          path: /healthcheck
          port: 8040
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /merge
        name: aga-external-config
      - mountPath: /merge/analytics/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rl5vw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: ampint-docker-artifactory
    nodeName: worker5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: apim-aga
    serviceAccountName: apim-aga
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aga-external-config
      persistentVolumeClaim:
        claimName: aga-external-config
    - name: licenses
      secret:
        defaultMode: 420
        secretName: apigw-license
    - name: kube-api-access-rl5vw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:49:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:48:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:54:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:54:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:48:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8491029668ab56ecc6e40cc324f0a901c55bd53b49b44daa3101cb625dd80499
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-7-BN0006-ubi9
      imageID: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics@sha256:57a28b5537d3c42bde071bbc50ad2678d96543b78573863aa226b7a4731ddd1c
      lastState:
        terminated:
          containerID: containerd://da0614608862faabdffad52b29fd462c60c535d6e542d6190d79e29acd9c7e93
          exitCode: 143
          finishedAt: "2025-07-14T05:51:49Z"
          reason: Error
          startedAt: "2025-07-14T05:49:09Z"
      name: apigateway
      ready: true
      resources: {}
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-14T05:51:54Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /merge
        name: aga-external-config
      - mountPath: /merge/analytics/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rl5vw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.10.118
    hostIPs:
    - ip: 192.168.10.118
    phase: Running
    podIP: 10.42.5.19
    podIPs:
    - ip: 10.42.5.19
    qosClass: BestEffort
    startTime: "2025-07-14T05:48:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
    creationTimestamp: "2025-07-14T05:48:36Z"
    generateName: apim-anm-6c997dcb45-
    generation: 1
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 6c997dcb45
    name: apim-anm-6c997dcb45-8dil6
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apim-anm-6c997dcb45
      uid: 5fb1feb3-13f9-43bb-a822-4db1ce54a0a3
    resourceVersion: "72969990"
    uid: 9ea5e967-411a-4a07-b028-11e2a5114fe7
  spec:
    containers:
    - env:
      - name: EMT_HEAP_SIZE_MB
        value: "1024"
      - name: EMT_TRACE_LEVEL
        value: INFO
      - name: APIGW_LOG_TRACE_TO_FILE
        value: "true"
      - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
        value: "false"
      - name: METRICS_DB_URL
        value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
      - name: METRICS_DB_USERNAME
        valueFrom:
          secretKeyRef:
            key: username
            name: apim-metrics-db
      - name: METRICS_DB_PASS
        valueFrom:
          secretKeyRef:
            key: password
            name: apim-metrics-db
      - name: ACCEPT_GENERAL_CONDITIONS
        value: "yes"
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-7-BN0006-ubi9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: liveness.anm
          path: /healthcheck
          port: 8091
          scheme: HTTPS
        initialDelaySeconds: 40
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: apigateway
      ports:
      - containerPort: 8090
        protocol: TCP
      - containerPort: 8091
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: readiness.anm
          path: /healthcheck
          port: 8091
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/Axway/apigateway/logs
        name: audit
      - mountPath: /merge
        name: anm-external-config
      - mountPath: /opt/Axway/apigateway/events
        name: anm-events
      - mountPath: /merge/apigateway/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qr64x
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: ampint-docker-artifactory
    initContainers:
    - command:
      - sh
      - -c
      - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting for
        mysql; sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-mysql
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qr64x
        readOnly: true
    nodeName: worker5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: apim-anm
    serviceAccountName: apim-anm
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: audit
      persistentVolumeClaim:
        claimName: audit
    - name: anm-external-config
      persistentVolumeClaim:
        claimName: anm-external-config
    - name: anm-events
      persistentVolumeClaim:
        claimName: anm-events
    - name: licenses
      secret:
        defaultMode: 420
        secretName: apigw-license
    - name: kube-api-access-qr64x
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:48:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:48:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:57:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:57:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:48:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ec090a3ace8d21486229b7e5b89c4edde701f166217509811ae3d7aac69285ff
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-7-BN0006-ubi9
      imageID: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager@sha256:d3fa1b2e9784f9441ac5c7f4390a9708d98ba0cefdd72089af3a25545e3642f3
      lastState:
        terminated:
          containerID: containerd://cc7ebeea9dfebc3242a6b8f538f629e60f4faf9fe69cddcb770b206987f416ce
          exitCode: 143
          finishedAt: "2025-07-14T05:55:37Z"
          reason: Error
          startedAt: "2025-07-14T05:52:41Z"
      name: apigateway
      ready: true
      resources: {}
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-14T05:55:40Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /opt/Axway/apigateway/logs
        name: audit
      - mountPath: /merge
        name: anm-external-config
      - mountPath: /opt/Axway/apigateway/events
        name: anm-events
      - mountPath: /merge/apigateway/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qr64x
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.10.118
    hostIPs:
    - ip: 192.168.10.118
    initContainerStatuses:
    - containerID: containerd://479daadd57e49725baf831e1d98b3fcc7ab94c26bb69cb6057d250a85a6545df
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-mysql
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://479daadd57e49725baf831e1d98b3fcc7ab94c26bb69cb6057d250a85a6545df
          exitCode: 0
          finishedAt: "2025-07-14T05:48:48Z"
          reason: Completed
          startedAt: "2025-07-14T05:48:46Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qr64x
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.5.17
    podIPs:
    - ip: 10.42.5.17
    qosClass: BestEffort
    startTime: "2025-07-14T05:48:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:11Z"
    creationTimestamp: "2025-07-14T06:51:15Z"
    generateName: apim-apimgr-5d5cb69687-
    generation: 1
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5d5cb69687
    name: apim-apimgr-5d5cb69687-ei7r0
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apim-apimgr-5d5cb69687
      uid: 72bfc98f-e478-472b-8c9b-4ef7f10c6267
    resourceVersion: "72969917"
    uid: a1d9965c-109b-4f27-8024-282ceb788b40
  spec:
    containers:
    - env:
      - name: EMT_HEAP_SIZE_MB
        value: "1512"
      - name: EMT_TRACE_LEVEL
        value: INFO
      - name: APIGW_LOG_TRACE_TO_FILE
        value: "true"
      - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
        value: "false"
      - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
        value: file
      - name: METRICS_DB_URL
        value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
      - name: METRICS_DB_USERNAME
        valueFrom:
          secretKeyRef:
            key: username
            name: apim-metrics-db
      - name: METRICS_DB_PASS
        valueFrom:
          secretKeyRef:
            key: password
            name: apim-metrics-db
      - name: EMT_ANM_HOSTS
        value: apim-anm:8090
      - name: GROUP_ID
        value: DefaultGroup
      - name: CASS_HOST
        value: cassandra.cassandra.svc.cluster.local
      - name: CASS_PORT
        value: "9042"
      - name: CASS_KEYSPACE
        value: apimks1
      - name: CASS_TKEYSPACE
        value: apimtks
      - name: CASS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: apim-cassandra
      - name: CASS_USERNAME
        valueFrom:
          secretKeyRef:
            key: username
            name: apim-cassandra
      - name: ACCEPT_GENERAL_CONDITIONS
        value: "yes"
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: liveness.apimgr
          path: /healthcheck
          port: 8075
          scheme: HTTPS
        initialDelaySeconds: 40
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: apigateway
      ports:
      - containerPort: 8075
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: readiness.apimgr
          path: /healthcheck
          port: 8075
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
        name: license
        subPath: license.lic
      - mountPath: /opt/Axway/apigateway/events
        name: events
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /merge/apigateway/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: ampint-docker-artifactory
    initContainers:
    - command:
      - sh
      - -c
      - c=0; x=1; until [ $(( c * 100 / x )) -ge 50 ]; do c=0; for host in cassandra.cassandra.svc.cluster.local;
        do echo waiting for ${host}; if nc -w 3 -v ${host} 9042;then c=$((c+1)); fi
        done;  sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-cassandra
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
    - command:
      - sh
      - -c
      - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting for
        mysql; sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-mysql
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
    - command:
      - sh
      - -c
      - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-anm
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
    - command:
      - sh
      - -c
      - |
        #!/bin/sh
        echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
        wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
      image: docker.io/busybox:1.36.1
      imagePullPolicy: IfNotPresent
      name: init-fed
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
    nodeName: worker5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: apim-apimgr
    serviceAccountName: apim-apimgr
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: apim-apimgr-license-config
      name: license
    - name: events
      persistentVolumeClaim:
        claimName: events
    - name: gw-external-config
      persistentVolumeClaim:
        claimName: gw-external-config
    - name: licenses
      secret:
        defaultMode: 420
        secretName: apigw-license
    - name: kube-api-access-75cfh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T06:51:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T06:52:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T09:26:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T09:26:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T06:51:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2575658ac0addc162d2ceb31a262a55d088ba1a2c29c1c217a4e7348ac29773a
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
      imageID: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway@sha256:2d0d79bfa723d1c2d7363bcf4c1617dea8350eabaf15acd22f1f9a20d704d202
      lastState:
        terminated:
          containerID: containerd://6512098169db87b7d32208c3d5e791d5a30cfcb697dbe3bff25f80aa34abe3c2
          exitCode: 143
          finishedAt: "2025-07-14T09:25:19Z"
          reason: Error
          startedAt: "2025-07-14T09:22:28Z"
      name: apigateway
      ready: true
      resources: {}
      restartCount: 31
      started: true
      state:
        running:
          startedAt: "2025-07-14T09:25:19Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
        name: license
      - mountPath: /opt/Axway/apigateway/events
        name: events
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /merge/apigateway/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.10.118
    hostIPs:
    - ip: 192.168.10.118
    initContainerStatuses:
    - containerID: containerd://43acf244236217922c641bc892765f72619075ce9c5c245422935fecf6d55fc9
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-cassandra
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://43acf244236217922c641bc892765f72619075ce9c5c245422935fecf6d55fc9
          exitCode: 0
          finishedAt: "2025-07-14T06:51:45Z"
          reason: Completed
          startedAt: "2025-07-14T06:51:43Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://597be7b23192c22961d2942aead600569fc170efe6621ed22b044351f9967d30
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-mysql
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://597be7b23192c22961d2942aead600569fc170efe6621ed22b044351f9967d30
          exitCode: 0
          finishedAt: "2025-07-14T06:51:55Z"
          reason: Completed
          startedAt: "2025-07-14T06:51:55Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d83373cbfe6a000ba43d14deff3b5c1e52133aac997fb38dcae72ed49080c4d4
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-anm
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d83373cbfe6a000ba43d14deff3b5c1e52133aac997fb38dcae72ed49080c4d4
          exitCode: 0
          finishedAt: "2025-07-14T06:52:01Z"
          reason: Completed
          startedAt: "2025-07-14T06:52:01Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://17caaa36c9e1f0ae78253d34a4cd7a2da4fc23a5721d181784601b13ae80b39a
      image: docker.io/library/busybox:1.36.1
      imageID: docker.io/library/busybox@sha256:d75b758a4fea99ffff4db799e16f853bbde8643671b5b72464a8ba94cbe3dbe3
      lastState: {}
      name: init-fed
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://17caaa36c9e1f0ae78253d34a4cd7a2da4fc23a5721d181784601b13ae80b39a
          exitCode: 0
          finishedAt: "2025-07-14T06:52:10Z"
          reason: Completed
          startedAt: "2025-07-14T06:52:09Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-75cfh
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.5.33
    podIPs:
    - ip: 10.42.5.33
    qosClass: BestEffort
    startTime: "2025-07-14T06:51:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-07-14T05:39:12Z"
    generateName: apim-apiportal-574c474d59-
    generation: 1
    labels:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 574c474d59
    name: apim-apiportal-574c474d59-dxivc
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apim-apiportal-574c474d59
      uid: 6874c311-7f47-4fdd-8241-ee5d4da2c4b5
    resourceVersion: "72969973"
    uid: bb2ac2a8-0541-4bf4-a765-b8d1e99e19f0
  spec:
    containers:
    - command:
      - /usr/local/bin/entrypoint.sh
      - apiportal
      env:
      - name: MYSQL_HOST
        value: mysql.metrics.svc.cluster.local
      - name: MYSQL_PORT
        value: "3306"
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: username
            name: apim-apiportal-db
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: apim-apiportal-db
      - name: MYSQL_DATABASE
        value: portal
      - name: MYSQL_SSL_ON
        value: "0"
      - name: MYSQL_SSL_VERIFY_CERT
        value: "0"
      - name: APACHE_SSL_ON
        value: "0"
      - name: APIMANAGER_CONFIGURED
        value: "1"
      - name: API_WHITELIST_CONFIGURED
        value: "1"
      - name: API_WHITELIST
        value: apitraffic.axway-aus.com
      - name: APIMANAGER_NAME
        value: Main
      - name: APIMANAGER_HOST
        value: apim-apimgr
      - name: APIMANAGER_PORT
        value: "8075"
      - name: HTTP_PORT
        value: "8080"
      - name: HTTPS_PORT
        value: "8443"
      - name: HTTPS_FORCE_PORT
        value: "443"
      - name: T4_DOWNLOADED
        value: "1"
      image: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal:7.7.20250228-BN1464
      imagePullPolicy: IfNotPresent
      name: apim-apiportal
      ports:
      - containerPort: 443
        name: apiportal
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/axway/apiportal/enckey
        name: enckey
      - mountPath: /opt/axway/apiportal/htdoc/images
        name: images
      - mountPath: /opt/axway/apiportal/htdoc/language
        name: language
      - mountPath: /opt/axway/apiportal/htdoc/templates
        name: templates
      - mountPath: /opt/axway/apiportal/htdoc/administrator/admlanguage
        name: admlanguage
      - mountPath: /opt/axway/apiportal/htdoc/administrator/components/com_apiportal/assets/cert
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hls6s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: ampint-docker-artifactory
    initContainers:
    - command:
      - sh
      - -c
      - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting for
        MySQL; sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-mysql
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hls6s
        readOnly: true
    - command:
      - sh
      - -c
      - until nc -w 3 -v  apim-apimgr 8075; do echo waiting for API Manager; sleep
        2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-apimanager
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hls6s
        readOnly: true
    nodeName: worker3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1048
      runAsGroup: 1048
      runAsUser: 1048
    serviceAccount: apim-apiportal
    serviceAccountName: apim-apiportal
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: enckey
      persistentVolumeClaim:
        claimName: enckey
    - name: images
      persistentVolumeClaim:
        claimName: images
    - name: language
      persistentVolumeClaim:
        claimName: language
    - name: templates
      persistentVolumeClaim:
        claimName: templates
    - name: admlanguage
      persistentVolumeClaim:
        claimName: admlanguage
    - name: certs
      persistentVolumeClaim:
        claimName: certs
    - name: kube-api-access-hls6s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:39:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T09:26:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T09:26:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T09:26:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-14T05:39:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://46d0cfd232a1744d299c892529f16413ccae639501fb2e2708c755e7a4f2ac9d
      image: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal:7.7.20250228-BN1464
      imageID: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal@sha256:bae305a83d03f20b9182ea17414c2b6e1b61864268113ba76a2a335ff7622694
      lastState: {}
      name: apim-apiportal
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-14T09:26:52Z"
      user:
        linux:
          gid: 1048
          supplementalGroups:
          - 1048
          uid: 1048
      volumeMounts:
      - mountPath: /opt/axway/apiportal/enckey
        name: enckey
      - mountPath: /opt/axway/apiportal/htdoc/images
        name: images
      - mountPath: /opt/axway/apiportal/htdoc/language
        name: language
      - mountPath: /opt/axway/apiportal/htdoc/templates
        name: templates
      - mountPath: /opt/axway/apiportal/htdoc/administrator/admlanguage
        name: admlanguage
      - mountPath: /opt/axway/apiportal/htdoc/administrator/components/com_apiportal/assets/cert
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hls6s
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.10.116
    hostIPs:
    - ip: 192.168.10.116
    initContainerStatuses:
    - containerID: containerd://65ae6de6aeae7b238039c0522e66cfb49723f7a378528bceff8f3d967f64b237
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-mysql
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://65ae6de6aeae7b238039c0522e66cfb49723f7a378528bceff8f3d967f64b237
          exitCode: 0
          finishedAt: "2025-07-14T05:39:22Z"
          reason: Completed
          startedAt: "2025-07-14T05:39:22Z"
      user:
        linux:
          gid: 1048
          supplementalGroups:
          - 1048
          uid: 1048
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hls6s
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://2416245df4b0728887ff861e367d249c5de083948294784484f35cf607cee11b
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-apimanager
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2416245df4b0728887ff861e367d249c5de083948294784484f35cf607cee11b
          exitCode: 0
          finishedAt: "2025-07-14T09:26:52Z"
          reason: Completed
          startedAt: "2025-07-14T05:39:31Z"
      user:
        linux:
          gid: 1048
          supplementalGroups:
          - 1048
          uid: 1048
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hls6s
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.4.224
    podIPs:
    - ip: 10.42.4.224
    qosClass: BestEffort
    startTime: "2025-07-14T05:39:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:10Z"
    creationTimestamp: "2025-08-01T02:41:12Z"
    generateName: apim-apitraffic-5bc47b988-
    generation: 1
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5bc47b988
    name: apim-apitraffic-5bc47b988-m6jsf
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apim-apitraffic-5bc47b988
      uid: 17b99c73-d51c-41fb-899b-9e6bf3967e02
    resourceVersion: "77769169"
    uid: 6ac39ffe-85f3-414a-9d46-8340b2ca20b2
  spec:
    containers:
    - env:
      - name: EMT_HEAP_SIZE_MB
        value: "1512"
      - name: EMT_TRACE_LEVEL
        value: INFO
      - name: APIGW_LOG_TRACE_TO_FILE
        value: "true"
      - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
        value: "false"
      - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
        value: file
      - name: METRICS_DB_URL
        value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
      - name: METRICS_DB_USERNAME
        valueFrom:
          secretKeyRef:
            key: username
            name: apim-metrics-db
      - name: METRICS_DB_PASS
        valueFrom:
          secretKeyRef:
            key: password
            name: apim-metrics-db
      - name: GROUP_ID
        value: DefaultGroup
      - name: CASS_HOST
        value: cassandra.cassandra.svc.cluster.local
      - name: CASS_PORT
        value: "9042"
      - name: CASS_KEYSPACE
        value: apimks1
      - name: CASS_TKEYSPACE
        value: apimtks
      - name: CASS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: apim-cassandra
      - name: CASS_USERNAME
        valueFrom:
          secretKeyRef:
            key: username
            name: apim-cassandra
      - name: ACCEPT_GENERAL_CONDITIONS
        value: "yes"
      - name: EMT_ANM_HOSTS
        value: apim-anm:8090
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: liveness.apitraffic
          path: /healthcheck
          port: 8065
          scheme: HTTPS
        initialDelaySeconds: 40
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: apigateway
      ports:
      - containerPort: 8065
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          httpHeaders:
          - name: k8sprobe
            value: readiness.apitraffic
          path: /healthcheck
          port: 8065
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
        name: license
        subPath: license.lic
      - mountPath: /opt/Axway/apigateway/events
        name: events
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /opt/Axway/apigateway/logs/opentraffic/
        name: opentraffic
      - mountPath: /opt/Axway/apigateway/logs/payloads/
        name: payloads
      - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
        name: activated-rules
      - mountPath: /merge/apigateway/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: ampint-docker-artifactory
    initContainers:
    - command:
      - sh
      - -c
      - c=0; x=1; until [ $(( c * 100 / x )) -ge 50 ]; do c=0; for host in cassandra.cassandra.svc.cluster.local;
        do echo waiting for ${host}; if nc -w 3 -v ${host} 9042;then c=$((c+1)); fi
        done;  sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-cassandra
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
    - command:
      - sh
      - -c
      - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting for
        mysql; sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-mysql
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
    - command:
      - sh
      - -c
      - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
      image: docker.io/busybox:1.34
      imagePullPolicy: IfNotPresent
      name: init-anm
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
    - command:
      - sh
      - -c
      - |
        #!/bin/sh
        echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
        wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
      image: docker.io/busybox:1.36.1
      imagePullPolicy: IfNotPresent
      name: init-fed
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
    nodeName: worker5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: apim-apitraffic
    serviceAccountName: apim-apitraffic
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: apim-apitraffic-license-config
      name: license
    - name: events
      persistentVolumeClaim:
        claimName: events
    - name: gw-external-config
      persistentVolumeClaim:
        claimName: gw-external-config
    - name: opentraffic
      persistentVolumeClaim:
        claimName: opentraffic
    - name: payloads
      persistentVolumeClaim:
        claimName: payloads
    - name: activated-rules
      persistentVolumeClaim:
        claimName: activated-rules
    - name: licenses
      secret:
        defaultMode: 420
        secretName: apigw-license
    - name: kube-api-access-q5wkb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-01T02:41:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-01T02:41:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-01T02:43:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-01T02:43:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-01T02:41:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 1Gi
      containerID: containerd://47e9b61dea0c46c8b20381c5afa1484489af7e186a68a092ff2b9c5ae921985e
      image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
      imageID: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway@sha256:2d0d79bfa723d1c2d7363bcf4c1617dea8350eabaf15acd22f1f9a20d704d202
      lastState: {}
      name: apigateway
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-01T02:41:20Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
        name: license
      - mountPath: /opt/Axway/apigateway/events
        name: events
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /opt/Axway/apigateway/logs/opentraffic/
        name: opentraffic
      - mountPath: /opt/Axway/apigateway/logs/payloads/
        name: payloads
      - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
        name: activated-rules
      - mountPath: /merge/apigateway/conf/licenses
        name: licenses
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.10.118
    hostIPs:
    - ip: 192.168.10.118
    initContainerStatuses:
    - containerID: containerd://daa9de4e95c68bd0b521746832f72032d0d1f0c6c8e933158e73b11cebf2bc82
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-cassandra
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://daa9de4e95c68bd0b521746832f72032d0d1f0c6c8e933158e73b11cebf2bc82
          exitCode: 0
          finishedAt: "2025-08-01T02:41:15Z"
          reason: Completed
          startedAt: "2025-08-01T02:41:13Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://4b4ceb555b637df6299f5d483185386765973b230e6d28917b4a0fef8737df4d
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-mysql
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4b4ceb555b637df6299f5d483185386765973b230e6d28917b4a0fef8737df4d
          exitCode: 0
          finishedAt: "2025-08-01T02:41:16Z"
          reason: Completed
          startedAt: "2025-08-01T02:41:16Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://6290151f49dbf13a80d047418609ec4c5c1116682b759674b021f6a76f6212f2
      image: docker.io/library/busybox:1.34
      imageID: docker.io/library/busybox@sha256:05a79c7279f71f86a2a0d05eb72fcb56ea36139150f0a75cd87e80a4272e4e39
      lastState: {}
      name: init-anm
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6290151f49dbf13a80d047418609ec4c5c1116682b759674b021f6a76f6212f2
          exitCode: 0
          finishedAt: "2025-08-01T02:41:17Z"
          reason: Completed
          startedAt: "2025-08-01T02:41:17Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d94e10ca37c863373e2c7a337ef2162163a8e36549921a1b82bc5f99d98bc9a5
      image: docker.io/library/busybox:1.36.1
      imageID: docker.io/library/busybox@sha256:d75b758a4fea99ffff4db799e16f853bbde8643671b5b72464a8ba94cbe3dbe3
      lastState: {}
      name: init-fed
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d94e10ca37c863373e2c7a337ef2162163a8e36549921a1b82bc5f99d98bc9a5
          exitCode: 0
          finishedAt: "2025-08-01T02:41:19Z"
          reason: Completed
          startedAt: "2025-08-01T02:41:18Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /merge
        name: gw-external-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q5wkb
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.5.117
    podIPs:
    - ip: 10.42.5.117
    qosClass: Burstable
    startTime: "2025-08-01T02:41:12Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-aga
    namespace: apim
    resourceVersion: "69508807"
    uid: 3e37aa00-f79b-46d5-9fce-1425bf190e28
  spec:
    clusterIP: 10.43.69.139
    clusterIPs:
    - 10.43.69.139
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: apianalyticsui
      port: 8040
      protocol: TCP
      targetPort: 8040
    selector:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-anm
    namespace: apim
    resourceVersion: "69508810"
    uid: 2d372a8e-50ff-4752-8373-cc00c4a43875
  spec:
    clusterIP: 10.43.196.171
    clusterIPs:
    - 10.43.196.171
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: gatewaymanager
      port: 8090
      protocol: TCP
      targetPort: 8090
    - name: gatewaymanagerui
      port: 8091
      protocol: TCP
      targetPort: 8091
    selector:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apimgr
    namespace: apim
    resourceVersion: "69508813"
    uid: d6fc1f43-0365-4bc0-81e8-2c0e9534cca7
  spec:
    clusterIP: 10.43.215.247
    clusterIPs:
    - 10.43.215.247
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: apimanagerui
      port: 8075
      protocol: TCP
      targetPort: 8075
    selector:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-28T07:40:29Z"
    labels:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apiportal
    namespace: apim
    resourceVersion: "69508817"
    uid: 4a2c3750-a7fc-438e-9ef1-2adbdf778956
  spec:
    clusterIP: 10.43.144.174
    clusterIPs:
    - 10.43.144.174
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: apim-apiportal-http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: apim-apiportal-https
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apitraffic
    namespace: apim
    resourceVersion: "69508820"
    uid: 2ffce771-12c5-44c0-87c8-4792f16cd422
  spec:
    clusterIP: 10.43.160.12
    clusterIPs:
    - 10.43.160.12
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: apigatewaytraffic
      port: 8065
      protocol: TCP
      targetPort: 8065
    selector:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-oauth
    namespace: apim
    resourceVersion: "69508823"
    uid: fd40c48a-1b02-4749-96ea-4060e376f2e4
  spec:
    clusterIP: 10.43.100.47
    clusterIPs:
    - 10.43.100.47
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: oauth
      port: 8089
      protocol: TCP
      targetPort: 8089
    selector:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    generation: 10
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-aga
    namespace: apim
    resourceVersion: "72970011"
    uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
    strategy:
      rollingUpdate:
        maxSurge: 2
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /merge/analytics/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-11-24T08:01:39Z"
      lastUpdateTime: "2025-07-07T01:02:26Z"
      message: ReplicaSet "apim-aga-587cffb769" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-17T17:04:58Z"
      lastUpdateTime: "2025-07-17T17:04:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 10
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "13"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    generation: 13
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-anm
    namespace: apim
    resourceVersion: "72970000"
    uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
    strategy:
      rollingUpdate:
        maxSurge: 2
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
          - mountPath: /opt/Axway/apigateway/events
            name: anm-events
          - mountPath: /merge/apigateway/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
        - name: anm-events
          persistentVolumeClaim:
            claimName: anm-events
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-11-24T08:01:39Z"
      lastUpdateTime: "2025-07-07T01:03:04Z"
      message: ReplicaSet "apim-anm-6c997dcb45" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-17T17:04:58Z"
      lastUpdateTime: "2025-07-17T17:04:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 13
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "49"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    generation: 49
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apimgr
    namespace: apim
    resourceVersion: "72969939"
    uid: 76b34a99-fac5-4798-8e42-de5c739386cd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
    strategy:
      rollingUpdate:
        maxSurge: 2
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:11Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /merge/apigateway/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - c=0; x=1; until [ $(( c * 100 / x )) -ge 50 ]; do c=0; for host in cassandra.cassandra.svc.cluster.local;
            do echo waiting for ${host}; if nc -w 3 -v ${host} 9042;then c=$((c+1));
            fi done;  sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T01:16:45Z"
      lastUpdateTime: "2025-07-07T01:16:45Z"
      message: ReplicaSet "apim-apimgr-5d5cb69687" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-17T17:04:56Z"
      lastUpdateTime: "2025-07-17T17:04:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 49
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-28T07:40:29Z"
    generation: 5
    labels:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apiportal
    namespace: apim
    resourceVersion: "72969982"
    uid: 956dc3eb-1506-44d8-b1c6-d96decc77144
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: apiportal
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
    strategy:
      rollingUpdate:
        maxSurge: 2
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apiportal
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
      spec:
        containers:
        - command:
          - /usr/local/bin/entrypoint.sh
          - apiportal
          env:
          - name: MYSQL_HOST
            value: mysql.metrics.svc.cluster.local
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-apiportal-db
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-apiportal-db
          - name: MYSQL_DATABASE
            value: portal
          - name: MYSQL_SSL_ON
            value: "0"
          - name: MYSQL_SSL_VERIFY_CERT
            value: "0"
          - name: APACHE_SSL_ON
            value: "0"
          - name: APIMANAGER_CONFIGURED
            value: "1"
          - name: API_WHITELIST_CONFIGURED
            value: "1"
          - name: API_WHITELIST
            value: apitraffic.axway-aus.com
          - name: APIMANAGER_NAME
            value: Main
          - name: APIMANAGER_HOST
            value: apim-apimgr
          - name: APIMANAGER_PORT
            value: "8075"
          - name: HTTP_PORT
            value: "8080"
          - name: HTTPS_PORT
            value: "8443"
          - name: HTTPS_FORCE_PORT
            value: "443"
          - name: T4_DOWNLOADED
            value: "1"
          image: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal:7.7.20250228-BN1464
          imagePullPolicy: IfNotPresent
          name: apim-apiportal
          ports:
          - containerPort: 443
            name: apiportal
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/axway/apiportal/enckey
            name: enckey
          - mountPath: /opt/axway/apiportal/htdoc/images
            name: images
          - mountPath: /opt/axway/apiportal/htdoc/language
            name: language
          - mountPath: /opt/axway/apiportal/htdoc/templates
            name: templates
          - mountPath: /opt/axway/apiportal/htdoc/administrator/admlanguage
            name: admlanguage
          - mountPath: /opt/axway/apiportal/htdoc/administrator/components/com_apiportal/assets/cert
            name: certs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for MySQL; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v  apim-apimgr 8075; do echo waiting for API Manager; sleep
            2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-apimanager
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1048
          runAsGroup: 1048
          runAsUser: 1048
        serviceAccount: apim-apiportal
        serviceAccountName: apim-apiportal
        terminationGracePeriodSeconds: 30
        volumes:
        - name: enckey
          persistentVolumeClaim:
            claimName: enckey
        - name: images
          persistentVolumeClaim:
            claimName: images
        - name: language
          persistentVolumeClaim:
            claimName: language
        - name: templates
          persistentVolumeClaim:
            claimName: templates
        - name: admlanguage
          persistentVolumeClaim:
            claimName: admlanguage
        - name: certs
          persistentVolumeClaim:
            claimName: certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T01:17:28Z"
      lastUpdateTime: "2025-07-07T01:17:28Z"
      message: ReplicaSet "apim-apiportal-574c474d59" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-17T17:04:57Z"
      lastUpdateTime: "2025-07-17T17:04:57Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "56"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    generation: 101
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apitraffic
    namespace: apim
    resourceVersion: "77769175"
    uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
    strategy:
      rollingUpdate:
        maxSurge: 2
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:10Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
          - mountPath: /merge/apigateway/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - c=0; x=1; until [ $(( c * 100 / x )) -ge 50 ]; do c=0; for host in cassandra.cassandra.svc.cluster.local;
            do echo waiting for ${host}; if nc -w 3 -v ${host} 9042;then c=$((c+1));
            fi done;  sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-07T01:17:48Z"
      lastUpdateTime: "2025-07-07T01:17:48Z"
      message: ReplicaSet "apim-apitraffic-5bc47b988" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-08-01T02:43:39Z"
      lastUpdateTime: "2025-08-01T02:43:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 101
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-07-07T00:57:20Z"
    generation: 1
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 587cffb769
    name: apim-aga-587cffb769
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "72970008"
    uid: ea871144-94a6-45bb-8e2c-c275cb1207c0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 587cffb769
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 587cffb769
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /merge/analytics/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "7"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-03-06T00:19:32Z"
    generation: 2
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5ffcb86c84
    name: apim-aga-5ffcb86c84
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "27919130"
    uid: e8f6aac4-01a5-4f66-a99a-43b978e1d2f0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5ffcb86c84
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5ffcb86c84
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20250228-3-BN0214-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /opt/Axway/analytics/conf/licenses/license.lic
            name: license
            subPath: license.lic
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-aga-license-config
          name: license
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-27T23:28:14Z"
    generation: 2
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 68c7bdb444
    name: apim-aga-68c7bdb444
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "27185399"
    uid: 4ec5b9f1-c317-45d3-8cb0-350aabf265ad
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 68c7bdb444
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 68c7bdb444
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /opt/Axway/analytics/conf/licenses/license.lic
            name: license
            subPath: license.lic
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-aga-license-config
          name: license
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "8"
      deployment.kubernetes.io/revision-history: 4,6
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-03-03T22:07:39Z"
    generation: 6
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 68f5fcc89d
    name: apim-aga-68f5fcc89d
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "49834734"
    uid: 497a3368-4f65-49bd-984a-6dd11cfe308d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 68f5fcc89d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 68f5fcc89d
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-6-BN0004-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /opt/Axway/analytics/conf/licenses/license.lic
            name: license
            subPath: license.lic
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-aga-license-config
          name: license
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T03:18:06Z"
    generation: 2
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 6cb4f4795c
    name: apim-aga-6cb4f4795c
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "69510431"
    uid: ef5f6ad7-5cdb-433c-816e-bbf1c798170a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 6cb4f4795c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 6cb4f4795c
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /opt/Axway/analytics/conf/licenses/license.lic
            name: license
            subPath: license.lic
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-aga-license-config
          name: license
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    generation: 2
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 6dc866b8c6
    name: apim-aga-6dc866b8c6
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "1930911"
    uid: c2fe58f3-e3e4-4f59-8f9e-6acf8b7724e5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 6dc866b8c6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 6dc866b8c6
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /opt/Axway/analytics/conf/licenses/license.lic
            name: license
            subPath: license.lic
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-aga-license-config
          name: license
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-25T02:58:50Z"
    generation: 2
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 78d89dfd59
    name: apim-aga-78d89dfd59
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "2418745"
    uid: 5d6040f9-3dd3-4fba-a272-9e5cc8aa549a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 78d89dfd59
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-25T13:58:50+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 78d89dfd59
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /opt/Axway/analytics/conf/licenses/license.lic
            name: license
            subPath: license.lic
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-aga-license-config
          name: license
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-03-03T22:11:39Z"
    generation: 2
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: b69566b84
    name: apim-aga-b69566b84
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-aga
      uid: 1b54dbd1-f1be-42dc-a786-157913d5b812
    resourceVersion: "27188943"
    uid: 7f95fb38-0c45-4815-91dc-e3bae68f01b1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: aga
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: b69566b84
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:14+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: aga
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: b69566b84
      spec:
        containers:
        - env:
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/analytics:7.7.0.20250228-2-BN0213-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8040
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8040
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: aga-external-config
          - mountPath: /opt/Axway/analytics/conf/licenses/license.lic
            name: license
            subPath: license.lic
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-aga
        serviceAccountName: apim-aga
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-aga-license-config
          name: license
        - name: aga-external-config
          persistentVolumeClaim:
            claimName: aga-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "6"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-27T23:57:18Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 54b65fdc96
    name: apim-anm-54b65fdc96
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "2423020"
    uid: 020ddd66-24cf-46f1-8f81-1e0bde3d442a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 54b65fdc96
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 54b65fdc96
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: DEBUG
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
          - mountPath: /opt/Axway/apigateway/events
            name: anm-events
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
        - name: anm-events
          persistentVolumeClaim:
            claimName: anm-events
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-03-06T00:19:32Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5558bc48d9
    name: apim-anm-5558bc48d9
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "27919183"
    uid: 92806903-19d1-46f0-a049-2a1487a8823b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5558bc48d9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5558bc48d9
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20250228-3-BN0214-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
          - mountPath: /opt/Axway/apigateway/events
            name: anm-events
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
        - name: anm-events
          persistentVolumeClaim:
            claimName: anm-events
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "12"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T03:18:06Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 57c767db4b
    name: apim-anm-57c767db4b
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "69510650"
    uid: 524bf108-96ae-42d7-9b13-7752b73293af
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 57c767db4b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 57c767db4b
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
          - mountPath: /opt/Axway/apigateway/events
            name: anm-events
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
        - name: anm-events
          persistentVolumeClaim:
            claimName: anm-events
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-27T23:28:13Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 59cc95684d
    name: apim-anm-59cc95684d
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "2421405"
    uid: b1f777b7-93ab-4db8-980f-c6d0bed6e8ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 59cc95684d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 59cc95684d
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-25T02:58:51Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5cb6fd5979
    name: apim-anm-5cb6fd5979
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "2418679"
    uid: 85433684-dcf8-4da1-83d8-5ed23eca40bb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5cb6fd5979
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-25T13:58:51+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5cb6fd5979
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-03-03T22:11:39Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5d455f9689
    name: apim-anm-5d455f9689
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "27189562"
    uid: fa95f6c2-0694-4eb3-a684-a7ff5bf7cc03
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5d455f9689
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5d455f9689
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20250228-2-BN0213-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
          - mountPath: /opt/Axway/apigateway/events
            name: anm-events
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
        - name: anm-events
          persistentVolumeClaim:
            claimName: anm-events
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-25T01:48:45Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5d974448bc
    name: apim-anm-5d974448bc
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "1930951"
    uid: e0fcc436-7c3e-49d8-b40a-4968b513828b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5d974448bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5d974448bc
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "13"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-07-07T00:57:20Z"
    generation: 1
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 6c997dcb45
    name: apim-anm-6c997dcb45
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "72969992"
    uid: 5fb1feb3-13f9-43bb-a822-4db1ce54a0a3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 6c997dcb45
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 6c997dcb45
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
          - mountPath: /opt/Axway/apigateway/events
            name: anm-events
          - mountPath: /merge/apigateway/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
        - name: anm-events
          persistentVolumeClaim:
            claimName: anm-events
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "11"
      deployment.kubernetes.io/revision-history: 7,9
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-28T00:03:53Z"
    generation: 6
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 757c965889
    name: apim-anm-757c965889
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "49834903"
    uid: 52cfa984-e68c-4bd9-a9ee-6351f1faeb0f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 757c965889
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 757c965889
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
          - mountPath: /opt/Axway/apigateway/events
            name: anm-events
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
        - name: anm-events
          persistentVolumeClaim:
            claimName: anm-events
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-24T08:01:39Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 78f9766d9
    name: apim-anm-78f9766d9
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "1922035"
    uid: 4ace8c97-0ae5-45b8-b271-c90e4cd1b026
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 78f9766d9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 78f9766d9
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /merge
            name: anm-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-27T23:51:01Z"
    generation: 2
    labels:
      app.kubernetes.io/component: anm
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 7bd6fb7855
    name: apim-anm-7bd6fb7855
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-anm
      uid: be7074fd-1954-44ca-b1ee-b42d1ab758ae
    resourceVersion: "2422201"
    uid: f098e72a-8bf1-4aec-b74e-9b6528d2e721
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: anm
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 7bd6fb7855
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-11-28T10:28:13+11:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: anm
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 7bd6fb7855
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1024"
          - name: EMT_TRACE_LEVEL
            value: DEBUG
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/admin-nodemanager:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8090
            protocol: TCP
          - containerPort: 8091
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.anm
              path: /healthcheck
              port: 8091
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/logs
            name: audit
          - mountPath: /merge
            name: anm-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-anm
        serviceAccountName: apim-anm
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-anm-license-config
          name: license
        - name: audit
          persistentVolumeClaim:
            claimName: audit
        - name: anm-external-config
          persistentVolumeClaim:
            claimName: anm-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "47"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-06-17T04:28:37Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 544df5df64
    name: apim-apimgr-544df5df64
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "64928137"
    uid: 3231e55f-347f-4155-b82e-0b34e4e8d21b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 544df5df64
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-17T04:28:37Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 544df5df64
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "39"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T01:06:59Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 54876c74d4
    name: apim-apimgr-54876c74d4
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "49802493"
    uid: caca89b3-d9b2-4428-811a-3777567828bd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 54876c74d4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T01:06:58Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 54876c74d4
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "49"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-07-07T00:57:21Z"
    generation: 1
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5d5cb69687
    name: apim-apimgr-5d5cb69687
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "72969925"
    uid: 72bfc98f-e478-472b-8c9b-4ef7f10c6267
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5d5cb69687
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:11Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5d5cb69687
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /merge/apigateway/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - c=0; x=1; until [ $(( c * 100 / x )) -ge 50 ]; do c=0; for host in cassandra.cassandra.svc.cluster.local;
            do echo waiting for ${host}; if nc -w 3 -v ${host} 9042;then c=$((c+1));
            fi done;  sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "41"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T03:02:35Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 685564fd7
    name: apim-apimgr-685564fd7
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "49835142"
    uid: ef8020e8-a5b1-49ce-af48-5c0d1105ae7c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 685564fd7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T03:02:35Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 685564fd7
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "44"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-19T23:53:20Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 6bfb8499ff
    name: apim-apimgr-6bfb8499ff
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "52748999"
    uid: d18bdf74-93c5-4c0e-b2e4-25819c910747
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 6bfb8499ff
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-19T23:53:20Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 6bfb8499ff
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "42"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T03:18:07Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 755596c486
    name: apim-apimgr-755596c486
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "52389105"
    uid: fb2fb5f3-8bfb-4df8-9ee4-c5bfaad3a6e5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 755596c486
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T03:02:35Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 755596c486
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "46"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-20T07:36:14Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 79677cf569
    name: apim-apimgr-79677cf569
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "62443974"
    uid: 36a85905-a4e8-453b-ac8c-f15cb6ed0f39
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 79677cf569
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-20T07:36:14Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 79677cf569
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "43"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-19T07:16:43Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 7d495596b7
    name: apim-apimgr-7d495596b7
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "52635383"
    uid: 37e5ab85-ef2c-463e-9a6b-0d3cbf4bbe91
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 7d495596b7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-19T07:16:43Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 7d495596b7
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "48"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-06-24T03:51:11Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 865db5d7dc
    name: apim-apimgr-865db5d7dc
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "69515286"
    uid: ec0afcb7-8b71-489e-a296-83793079cfcd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 865db5d7dc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:11Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 865db5d7dc
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "45"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-20T07:30:59Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: c59ddd6dd
    name: apim-apimgr-c59ddd6dd
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "52750468"
    uid: 4c8ea636-1d05-4d4f-ab8d-397d3143e23d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: c59ddd6dd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-20T07:30:59Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: c59ddd6dd
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "40"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T01:11:07Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: c9896bd84
    name: apim-apimgr-c9896bd84
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apimgr
      uid: 76b34a99-fac5-4798-8e42-de5c739386cd
    resourceVersion: "49830693"
    uid: 26ca0c77-6c87-403c-937a-a43b75afa5dd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apimgr
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: c9896bd84
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T01:11:07Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apimgr
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: c9896bd84
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8075
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apimgr
              path: /healthcheck
              port: 8075
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apimgr
        serviceAccountName: apim-apimgr
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apimgr-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-07-07T00:57:22Z"
    generation: 1
    labels:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 574c474d59
    name: apim-apiportal-574c474d59
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apiportal
      uid: 956dc3eb-1506-44d8-b1c6-d96decc77144
    resourceVersion: "72969980"
    uid: 6874c311-7f47-4fdd-8241-ee5d4da2c4b5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: apiportal
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 574c474d59
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apiportal
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 574c474d59
      spec:
        containers:
        - command:
          - /usr/local/bin/entrypoint.sh
          - apiportal
          env:
          - name: MYSQL_HOST
            value: mysql.metrics.svc.cluster.local
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-apiportal-db
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-apiportal-db
          - name: MYSQL_DATABASE
            value: portal
          - name: MYSQL_SSL_ON
            value: "0"
          - name: MYSQL_SSL_VERIFY_CERT
            value: "0"
          - name: APACHE_SSL_ON
            value: "0"
          - name: APIMANAGER_CONFIGURED
            value: "1"
          - name: API_WHITELIST_CONFIGURED
            value: "1"
          - name: API_WHITELIST
            value: apitraffic.axway-aus.com
          - name: APIMANAGER_NAME
            value: Main
          - name: APIMANAGER_HOST
            value: apim-apimgr
          - name: APIMANAGER_PORT
            value: "8075"
          - name: HTTP_PORT
            value: "8080"
          - name: HTTPS_PORT
            value: "8443"
          - name: HTTPS_FORCE_PORT
            value: "443"
          - name: T4_DOWNLOADED
            value: "1"
          image: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal:7.7.20250228-BN1464
          imagePullPolicy: IfNotPresent
          name: apim-apiportal
          ports:
          - containerPort: 443
            name: apiportal
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/axway/apiportal/enckey
            name: enckey
          - mountPath: /opt/axway/apiportal/htdoc/images
            name: images
          - mountPath: /opt/axway/apiportal/htdoc/language
            name: language
          - mountPath: /opt/axway/apiportal/htdoc/templates
            name: templates
          - mountPath: /opt/axway/apiportal/htdoc/administrator/admlanguage
            name: admlanguage
          - mountPath: /opt/axway/apiportal/htdoc/administrator/components/com_apiportal/assets/cert
            name: certs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for MySQL; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v  apim-apimgr 8075; do echo waiting for API Manager; sleep
            2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-apimanager
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1048
          runAsGroup: 1048
          runAsUser: 1048
        serviceAccount: apim-apiportal
        serviceAccountName: apim-apiportal
        terminationGracePeriodSeconds: 30
        volumes:
        - name: enckey
          persistentVolumeClaim:
            claimName: enckey
        - name: images
          persistentVolumeClaim:
            claimName: images
        - name: language
          persistentVolumeClaim:
            claimName: language
        - name: templates
          persistentVolumeClaim:
            claimName: templates
        - name: admlanguage
          persistentVolumeClaim:
            claimName: admlanguage
        - name: certs
          persistentVolumeClaim:
            claimName: certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      deployment.kubernetes.io/revision-history: "1"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-28T07:40:29Z"
    generation: 4
    labels:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 74ff5bd7bc
    name: apim-apiportal-74ff5bd7bc
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apiportal
      uid: 956dc3eb-1506-44d8-b1c6-d96decc77144
    resourceVersion: "49834346"
    uid: 5768435c-efa7-4bc0-a3e2-2afe6c318d3c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apiportal
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 74ff5bd7bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apiportal
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 74ff5bd7bc
      spec:
        containers:
        - command:
          - /usr/local/bin/entrypoint.sh
          - apiportal
          env:
          - name: MYSQL_HOST
            value: mysql.metrics.svc.cluster.local
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-apiportal-db
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-apiportal-db
          - name: MYSQL_DATABASE
            value: portal
          - name: MYSQL_SSL_ON
            value: "0"
          - name: MYSQL_SSL_VERIFY_CERT
            value: "0"
          - name: APACHE_SSL_ON
            value: "0"
          - name: APIMANAGER_CONFIGURED
            value: "1"
          - name: API_WHITELIST_CONFIGURED
            value: "1"
          - name: API_WHITELIST
            value: apitraffic.axway-aus.com
          - name: APIMANAGER_NAME
            value: Main
          - name: APIMANAGER_HOST
            value: apim-apimgr
          - name: APIMANAGER_PORT
            value: "8075"
          - name: HTTP_PORT
            value: "8080"
          - name: HTTPS_PORT
            value: "8443"
          - name: HTTPS_FORCE_PORT
            value: "443"
          - name: T4_DOWNLOADED
            value: "1"
          image: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal:7.7.20240830-BN1379
          imagePullPolicy: IfNotPresent
          name: apim-apiportal
          ports:
          - containerPort: 443
            name: apiportal
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/enckey
            name: enckey
          - mountPath: /opt/Axway/apigateway/images
            name: images
          - mountPath: /opt/Axway/apigateway/language
            name: language
          - mountPath: /opt/Axway/apigateway/templates
            name: templates
          - mountPath: /opt/Axway/apigateway/admlanguage
            name: admlanguage
          - mountPath: /opt/Axway/apigateway/certs
            name: certs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for MySQL; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v  apim-apimgr 8075; do echo waiting for API Manager; sleep
            2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-apimanager
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1048
          runAsGroup: 1048
          runAsUser: 1048
        serviceAccount: apim-apiportal
        serviceAccountName: apim-apiportal
        terminationGracePeriodSeconds: 30
        volumes:
        - name: enckey
          persistentVolumeClaim:
            claimName: enckey
        - name: images
          persistentVolumeClaim:
            claimName: images
        - name: language
          persistentVolumeClaim:
            claimName: language
        - name: templates
          persistentVolumeClaim:
            claimName: templates
        - name: admlanguage
          persistentVolumeClaim:
            claimName: admlanguage
        - name: certs
          persistentVolumeClaim:
            claimName: certs
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T03:18:08Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 7897df59d4
    name: apim-apiportal-7897df59d4
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apiportal
      uid: 956dc3eb-1506-44d8-b1c6-d96decc77144
    resourceVersion: "69515507"
    uid: 36baa890-d5d5-4411-a745-f72421518e6f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apiportal
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 7897df59d4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apiportal
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 7897df59d4
      spec:
        containers:
        - command:
          - /usr/local/bin/entrypoint.sh
          - apiportal
          env:
          - name: MYSQL_HOST
            value: mysql.metrics.svc.cluster.local
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-apiportal-db
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-apiportal-db
          - name: MYSQL_DATABASE
            value: portal
          - name: MYSQL_SSL_ON
            value: "0"
          - name: MYSQL_SSL_VERIFY_CERT
            value: "0"
          - name: APACHE_SSL_ON
            value: "0"
          - name: APIMANAGER_CONFIGURED
            value: "1"
          - name: API_WHITELIST_CONFIGURED
            value: "1"
          - name: API_WHITELIST
            value: apitraffic.axway-aus.com
          - name: APIMANAGER_NAME
            value: Main
          - name: APIMANAGER_HOST
            value: apim-apimgr
          - name: APIMANAGER_PORT
            value: "8075"
          - name: HTTP_PORT
            value: "8080"
          - name: HTTPS_PORT
            value: "8443"
          - name: HTTPS_FORCE_PORT
            value: "443"
          - name: T4_DOWNLOADED
            value: "1"
          image: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal:7.7.20250228-BN1464
          imagePullPolicy: IfNotPresent
          name: apim-apiportal
          ports:
          - containerPort: 443
            name: apiportal
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/enckey
            name: enckey
          - mountPath: /opt/Axway/apigateway/images
            name: images
          - mountPath: /opt/Axway/apigateway/language
            name: language
          - mountPath: /opt/Axway/apigateway/templates
            name: templates
          - mountPath: /opt/Axway/apigateway/admlanguage
            name: admlanguage
          - mountPath: /opt/Axway/apigateway/certs
            name: certs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for MySQL; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v  apim-apimgr 8075; do echo waiting for API Manager; sleep
            2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-apimanager
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1048
          runAsGroup: 1048
          runAsUser: 1048
        serviceAccount: apim-apiportal
        serviceAccountName: apim-apiportal
        terminationGracePeriodSeconds: 30
        volumes:
        - name: enckey
          persistentVolumeClaim:
            claimName: enckey
        - name: images
          persistentVolumeClaim:
            claimName: images
        - name: language
          persistentVolumeClaim:
            claimName: language
        - name: templates
          persistentVolumeClaim:
            claimName: templates
        - name: admlanguage
          persistentVolumeClaim:
            claimName: admlanguage
        - name: certs
          persistentVolumeClaim:
            claimName: certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-03-06T00:19:33Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apiportal
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 866d77c495
    name: apim-apiportal-866d77c495
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apiportal
      uid: 956dc3eb-1506-44d8-b1c6-d96decc77144
    resourceVersion: "27918965"
    uid: 4257ee12-7e2d-47e3-860e-c70c741f3e6c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apiportal
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 866d77c495
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apiportal
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 866d77c495
      spec:
        containers:
        - command:
          - /usr/local/bin/entrypoint.sh
          - apiportal
          env:
          - name: MYSQL_HOST
            value: mysql.metrics.svc.cluster.local
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-apiportal-db
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-apiportal-db
          - name: MYSQL_DATABASE
            value: portal
          - name: MYSQL_SSL_ON
            value: "0"
          - name: MYSQL_SSL_VERIFY_CERT
            value: "0"
          - name: APACHE_SSL_ON
            value: "0"
          - name: APIMANAGER_CONFIGURED
            value: "1"
          - name: API_WHITELIST_CONFIGURED
            value: "1"
          - name: API_WHITELIST
            value: apitraffic.axway-aus.com
          - name: APIMANAGER_NAME
            value: Main
          - name: APIMANAGER_HOST
            value: apim-apimgr
          - name: APIMANAGER_PORT
            value: "8075"
          - name: HTTP_PORT
            value: "8080"
          - name: HTTPS_PORT
            value: "8443"
          - name: HTTPS_FORCE_PORT
            value: "443"
          - name: T4_DOWNLOADED
            value: "1"
          image: docker.repository.axway.com/apiportal-docker-prod/7.7/apiportal:7.7.20250228-BN1432
          imagePullPolicy: IfNotPresent
          name: apim-apiportal
          ports:
          - containerPort: 443
            name: apiportal
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/enckey
            name: enckey
          - mountPath: /opt/Axway/apigateway/images
            name: images
          - mountPath: /opt/Axway/apigateway/language
            name: language
          - mountPath: /opt/Axway/apigateway/templates
            name: templates
          - mountPath: /opt/Axway/apigateway/admlanguage
            name: admlanguage
          - mountPath: /opt/Axway/apigateway/certs
            name: certs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for MySQL; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v  apim-apimgr 8075; do echo waiting for API Manager; sleep
            2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-apimanager
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1048
          runAsGroup: 1048
          runAsUser: 1048
        serviceAccount: apim-apiportal
        serviceAccountName: apim-apiportal
        terminationGracePeriodSeconds: 30
        volumes:
        - name: enckey
          persistentVolumeClaim:
            claimName: enckey
        - name: images
          persistentVolumeClaim:
            claimName: images
        - name: language
          persistentVolumeClaim:
            claimName: language
        - name: templates
          persistentVolumeClaim:
            claimName: templates
        - name: admlanguage
          persistentVolumeClaim:
            claimName: admlanguage
        - name: certs
          persistentVolumeClaim:
            claimName: certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "46"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T01:06:57Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 54cc6d54d5
    name: apim-apitraffic-54cc6d54d5
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "49802634"
    uid: 0670a80a-286a-48e3-8a0b-874a65ff0db5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 54cc6d54d5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T01:06:57Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 54cc6d54d5
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "47"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T01:11:06Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 587b588895
    name: apim-apitraffic-587b588895
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "49830461"
    uid: 088312ac-d238-4a58-8d57-37f4f593e631
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 587b588895
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T01:11:06Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 587b588895
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "56"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-07-07T00:57:22Z"
    generation: 5
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5bc47b988
    name: apim-apitraffic-5bc47b988
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "77769172"
    uid: 17b99c73-d51c-41fb-899b-9e6bf3967e02
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5bc47b988
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:10Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5bc47b988
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
          - mountPath: /merge/apigateway/conf/licenses
            name: licenses
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - c=0; x=1; until [ $(( c * 100 / x )) -ge 50 ]; do c=0; for host in cassandra.cassandra.svc.cluster.local;
            do echo waiting for ${host}; if nc -w 3 -v ${host} 9042;then c=$((c+1));
            fi done;  sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
        - name: licenses
          secret:
            defaultMode: 420
            secretName: apigw-license
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "52"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-20T07:30:58Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5df8cdc767
    name: apim-apitraffic-5df8cdc767
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "52750629"
    uid: 8e93e0ec-8f60-4a23-b954-28f511d6850a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5df8cdc767
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-20T07:30:58Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5df8cdc767
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "51"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-19T23:53:19Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 5fc864df75
    name: apim-apitraffic-5fc864df75
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "52749382"
    uid: f47e4029-aefb-4163-bf3f-c292ab02e650
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 5fc864df75
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-19T23:53:19Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 5fc864df75
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "55"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-06-24T03:51:10Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 65658dc654
    name: apim-apitraffic-65658dc654
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "69515616"
    uid: 837a6657-d0ca-4080-918d-b84d3b67d396
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 65658dc654
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-24T03:51:10Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 65658dc654
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "48"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T03:02:34Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 6c6479c96b
    name: apim-apitraffic-6c6479c96b
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "49835378"
    uid: 07b2294b-49e3-4ae3-a5f7-ad3c9c369b68
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 6c6479c96b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T03:02:34Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 6c6479c96b
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-4-BN0145-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "53"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-20T07:36:13Z"
    generation: 20
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: 6f7f9d4646
    name: apim-apitraffic-6f7f9d4646
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "62443660"
    uid: 3391d1bb-012f-43bb-95ba-88c67cdcdc7b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: 6f7f9d4646
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-20T07:36:13Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: 6f7f9d4646
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 20
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "50"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-19T07:16:43Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: b4cb94d86
    name: apim-apitraffic-b4cb94d86
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "52635487"
    uid: 25a8ea25-6573-4a62-afe1-27788393b0b6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: b4cb94d86
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-19T07:16:42Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: b4cb94d86
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "54"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-06-17T04:28:36Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: bcd6887fb
    name: apim-apitraffic-bcd6887fb
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "64928212"
    uid: 0fd0200f-b610-4093-bac3-2bde85acda8d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: bcd6887fb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-06-17T04:28:35Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: bcd6887fb
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "49"
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2025-05-12T03:19:15Z"
    generation: 2
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/name: apim
      pod-template-hash: f79459789
    name: apim-apitraffic-f79459789
    namespace: apim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apim-apitraffic
      uid: 1a063294-86c5-464d-acdf-75d6ea5ac592
    resourceVersion: "52388621"
    uid: 0e2639a3-3452-413f-b6b1-ad3df81b7114
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: apitraffic
        app.kubernetes.io/instance: apim
        app.kubernetes.io/name: apim
        pod-template-hash: f79459789
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-05-12T03:02:34Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: apitraffic
          app.kubernetes.io/instance: apim
          app.kubernetes.io/name: apim
          pod-template-hash: f79459789
      spec:
        containers:
        - env:
          - name: EMT_HEAP_SIZE_MB
            value: "1512"
          - name: EMT_TRACE_LEVEL
            value: INFO
          - name: APIGW_LOG_TRACE_TO_FILE
            value: "true"
          - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
            value: "false"
          - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
            value: file
          - name: METRICS_DB_URL
            value: jdbc:mysql://mysql.metrics.svc.cluster.local:3306/metrics?useSSL=false
          - name: METRICS_DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-metrics-db
          - name: METRICS_DB_PASS
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-metrics-db
          - name: GROUP_ID
            value: DefaultGroup
          - name: CASS_HOST
            value: cassandra.cassandra.svc.cluster.local
          - name: CASS_PORT
            value: "9042"
          - name: CASS_KEYSPACE
            value: apimks1
          - name: CASS_TKEYSPACE
            value: apimtks
          - name: CASS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: apim-cassandra
          - name: CASS_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: apim-cassandra
          - name: ACCEPT_GENERAL_CONDITIONS
            value: "yes"
          - name: EMT_ANM_HOSTS
            value: apim-anm:8090
          image: docker.repository.axway.com/apigateway-docker-prod/7.7/gateway:7.7.0.20240830-7-BN0006-ubi9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: liveness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: apigateway
          ports:
          - containerPort: 8065
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k8sprobe
                value: readiness.apitraffic
              path: /healthcheck
              port: 8065
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/Axway/apigateway/conf/licenses/license.lic
            name: license
            subPath: license.lic
          - mountPath: /opt/Axway/apigateway/events
            name: events
          - mountPath: /merge
            name: gw-external-config
          - mountPath: /opt/Axway/apigateway/logs/opentraffic/
            name: opentraffic
          - mountPath: /opt/Axway/apigateway/logs/payloads/
            name: payloads
          - mountPath: /opt/Axway/apigateway/system/conf/threat-protection/default/
            name: activated-rules
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ampint-docker-artifactory
        initContainers:
        - command:
          - sh
          - -c
          - until nc -w 3 -v cassandra.cassandra.svc.cluster.local 9042; do echo waiting
            for cassandra.cassandra.svc.cluster.local; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-cassandra
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v mysql.metrics.svc.cluster.local 3306; do echo waiting
            for mysql; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - until nc -w 3 -v apim-anm 8090; do echo waiting for anm; sleep 2; done;
          image: docker.io/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: init-anm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sh
          - -c
          - |
            #!/bin/sh
            echo "Download API-Gateway config from: https://github.com/neohope83/axway/raw/main/yaml.tar.gz"
            wget -O /merge/yaml https://github.com/neohope83/apim-local/raw/refs/heads/main/yaml.tar.gz
          image: docker.io/busybox:1.36.1
          imagePullPolicy: IfNotPresent
          name: init-fed
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /merge
            name: gw-external-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        serviceAccount: apim-apitraffic
        serviceAccountName: apim-apitraffic
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: apim-apitraffic-license-config
          name: license
        - name: events
          persistentVolumeClaim:
            claimName: events
        - name: gw-external-config
          persistentVolumeClaim:
            claimName: gw-external-config
        - name: opentraffic
          persistentVolumeClaim:
            claimName: opentraffic
        - name: payloads
          persistentVolumeClaim:
            claimName: payloads
        - name: activated-rules
          persistentVolumeClaim:
            claimName: activated-rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-28T22:51:14Z"
    labels:
      app.kubernetes.io/component: aga
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-aga
    namespace: apim
    resourceVersion: "74806721"
    uid: df8aa8ce-5454-48ac-a436-7361417bf785
  spec:
    maxReplicas: 100
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: apim-aga
  status:
    conditions:
    - lastTransitionTime: "2025-01-15T22:37:32Z"
      message: the HPA controller was able to get the target's current scale
      reason: SucceededGetScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2024-11-28T22:51:29Z"
      message: 'the HPA was unable to compute the replica count: failed to get cpu
        utilization: missing request for cpu in container apigateway of Pod apim-aga-587cffb769-qs328'
      reason: FailedGetResourceMetric
      status: "False"
      type: ScalingActive
    currentMetrics:
    - type: ""
    currentReplicas: 1
    desiredReplicas: 0
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-28T22:52:29Z"
    labels:
      app.kubernetes.io/component: apimgr
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apimgr
    namespace: apim
    resourceVersion: "74806720"
    uid: d42174fa-e4ec-4253-bd5e-518ffacf4812
  spec:
    maxReplicas: 100
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: apim-apimgr
  status:
    conditions:
    - lastTransitionTime: "2025-01-15T22:37:32Z"
      message: the HPA controller was able to get the target's current scale
      reason: SucceededGetScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2024-11-28T22:52:44Z"
      message: 'the HPA was unable to compute the replica count: failed to get cpu
        utilization: missing request for cpu in container apigateway of Pod apim-apimgr-5d5cb69687-ei7r0'
      reason: FailedGetResourceMetric
      status: "False"
      type: ScalingActive
    currentMetrics:
    - type: ""
    currentReplicas: 1
    desiredReplicas: 0
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      meta.helm.sh/release-name: apim
      meta.helm.sh/release-namespace: apim
    creationTimestamp: "2024-11-28T22:52:29Z"
    labels:
      app.kubernetes.io/component: apitraffic
      app.kubernetes.io/instance: apim
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: apim
      app.kubernetes.io/version: 7.7.0.20250530-1-BN0241-ubi9
      helm.sh/chart: apigateway-1.16.0
    name: apim-apitraffic
    namespace: apim
    resourceVersion: "79102264"
    uid: 0e2bb8d5-37a2-401e-896c-6b4fe975e218
  spec:
    maxReplicas: 3
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: apim-apitraffic
  status:
    conditions:
    - lastTransitionTime: "2025-01-15T15:31:14Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-08-01T02:44:22Z"
      message: the HPA was able to successfully calculate a replica count from cpu
        resource utilization (percentage of request)
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-06-12T07:10:13Z"
      message: the desired count is within the acceptable range
      reason: DesiredWithinRange
      status: "False"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageUtilization: 11
          averageValue: 28m
        name: cpu
      type: Resource
    currentReplicas: 1
    desiredReplicas: 1
    lastScaleTime: "2025-07-07T01:23:14Z"
kind: List
metadata:
  resourceVersion: ""
